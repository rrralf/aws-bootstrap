AWSTemplateFormatVersion: 2010-09-09
Parameters:
  EC2InstanceType:
    Type: String
  EC2AMI:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
Resources:
  #
  # define VPC for the stack
  StackVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.121.0.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: Name
          Value: !Sub 'vpc-${AWS::StackName}'

  StackSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref StackVPC
      CidrBlock: 10.121.0.0/24
      AvailabilityZone: "eu-central-1a"
      Tags:
      - Key: stack
        Value: production

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'Internal Security group for ${AWS::StackName}'
      GroupName: !Sub 'msg-${AWS::StackName}'
      VpcId: !Ref StackVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        # tag "name" is used to "name" the instance
        - Key: Name
          Value: !Ref AWS::StackName

  EC2InstanceRole:  
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service:
              - "ec2.amazonaws.com"
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName


# Outputs:


